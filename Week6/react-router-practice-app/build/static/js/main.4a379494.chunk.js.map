{"version":3,"sources":["components/layout/MainNavigation.module.css","components/quotes/QuoteForm.module.css","components/quotes/QuoteList.module.css","components/comments/NewCommentForm.module.css","components/layout/Layout.module.css","components/UI/LoadingSpinner.module.css","components/quotes/QuoteItem.module.css","components/UI/Card.module.css","components/comments/Comments.module.css","components/quotes/HighlightedQuote.module.css","store/add-quote.js","store/index.js","components/layout/MainNavigation.js","components/layout/Layout.js","components/UI/LoadingSpinner.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","pages/AllQuotes.js","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuotes.js","pages/NotFound.js","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuotesDetail.js","App.js","index.js"],"names":["module","exports","quotesSlice","createSlice","name","initialState","quotes","status","reducers","changeStatus","state","action","payload","addNewQuote","console","log","addCommentonQuote","quotesAction","actions","store","configureStore","reducer","addQuote","MainNavigation","className","classes","header","logo","nav","to","activeClassName","active","Layout","props","main","children","LoadingSpinner","spinner","QuoteItem","item","text","author","id","QuoteList","ascending","history","useHistory","location","useLocation","isAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","isLoading","loading","list","map","quote","DUMMY_QUOTES","AllQuotes","useSelector","dispatch","useDispatch","useEffect","getData","fetch","response","ok","Error","error","json","data","quotesList","Card","card","QuoteForm","authorInputRef","useRef","textInputRef","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","control","htmlFor","type","ref","rows","NewQuotes","quoteInfo","sendData","method","body","JSON","stringify","NotFound","NewCommentForm","commentTextRef","submitFormHandler","Comments","useState","isAddingComment","setIsAddingComment","comments","HighlightedQuote","QuotesDetail","params","useParams","match","useRouteMatch","find","quoteId","path","url","exact","App","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.4a379494.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\",\"nav\":\"MainNavigation_nav__2KJfX\",\"active\":\"MainNavigation_active__oN3Ka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ndw9\",\"loading\":\"QuoteForm_loading__iDpS0\",\"control\":\"QuoteForm_control__2lCiE\",\"actions\":\"QuoteForm_actions__354La\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2Kyqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\"};","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst quotesSlice = createSlice({\n    name: 'quotes',\n    initialState: {\n        quotes: [],\n        status: false\n    },\n    reducers: {\n        changeStatus(state, action){\n            state.status = action.payload;\n        },\n        addNewQuote(state, action) {\n            console.log(\"reducer on add new quote\");\n            state.status = action.status;\n        },\n        addCommentonQuote(state ,action) {\n            console.log(\"comment add succesfully\");\n        },\n    }\n});\n\n\nexport const getQuote = () => {\n    return async(dispatch) => {\n        const getData = async() => {\n            const response = await fetch('https://react-project-sending-http-default-rtdb.firebaseio.com/quotes.json');\n\n            if(!response.ok) {\n                throw new Error(response.error || \"Something went wrong\");\n            }\n\n            let data = await response.json();\n            console.log(data);\n            return data;\n        }\n        dispatch(quotesAction.changeStatus('pending'));\n        try {\n            const quotesList =  await getData();\n            console.log(quotesList);\n            // dispatch(quotesAction.changeStatus('completed'));\n        }\n        catch(error) {\n            console.log(error);\n            // dispatch(quotesAction.changeStatus('error'));\n            \n        }\n    }\n}\n\n\nexport const addQuote = (quote) => {\n    return  async (dispatch) => {\n        const sendData = async() => {\n            const response = await fetch('https://react-project-sending-http-default-rtdb.firebaseio.com/quotes.json',{\n                method: \"POST\",\n                body: JSON.stringify(quote),\n            })\n            if(!response.ok){\n                throw new Error(response.error || \"Something went wrong\");\n            }\n        }\n        dispatch(quotesAction.changeStatus('pending'));\n        try{\n            await sendData();\n            dispatch(quotesAction.changeStatus('completed'));\n\n        }\n        catch(error){\n            console.log(error);\n            dispatch(quotesAction.changeStatus('error'));\n\n        }\n    }\n}\n\n\nexport const quotesAction = quotesSlice.actions;\n\nexport default quotesSlice;","import { configureStore } from \"@reduxjs/toolkit\";\nimport quotesSlice from \"./add-quote\";\n// import getQuoteSlice from './get-quote';\n\n\nconst store = configureStore({\n    reducer : {\n        addQuote : quotesSlice.reducer,\n        // getQuote: getQuoteSlice.reducer,\n    }\n});\n\n\n\nexport default store ;\n","import { NavLink } from \"react-router-dom\";\nimport classes  from \"./MainNavigation.module.css\";\n\nconst MainNavigation = () => {\n    return(\n        <header className={classes.header}>\n            <div className={classes.logo} >Great Quotes</div>\n            <nav className={classes.nav}>\n                <ul>\n                    <li>\n                        <NavLink to='/quotes' activeClassName={classes.active}>\n                            All Quotes \n                        </NavLink>\n                    </li>\n                    \n                    <li>\n                        <NavLink to='/new-quote' activeClassName={classes.active}>\n                            Add a Quote\n                        </NavLink>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default MainNavigation;","import  classes  from './Layout.module.css';\nimport { Fragment }  from 'react';\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n    return(\n        <Fragment>\n            <MainNavigation />\n            <main className={classes.main}>{props.children}</main>\n        </Fragment>\n    )\n}\n\nexport default Layout;","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { Link }  from \"react-router-dom\";\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  \n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`} >\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom'; \nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history= useHistory();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n\n  let isAscending = queryParams.get('sort') === 'asc';\n\n  const sortedQuotes = sortQuotes(props.quotes, isAscending);\n\n\n  const onClickSorting = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${(isAscending ? \"desc\" : \"asc\")}`\n    })\n    // history.push('/quotes?sort=' + );\n\n  }\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={onClickSorting}>Sort {isAscending ? \"Desending\" : \"Ascending\"}</button>\n      </div>\n      {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import QuoteList from \"../components/quotes/QuoteList\";\nimport { getQuote } from '../store/add-quote';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from \"react\";\nimport { quotesAction } from '../store/add-quote';  \n\nlet DUMMY_QUOTES = [\n    {id: \"q1\", author: \"MAX\", text: \"Learning React is fun!\"},\n    {id: \"q2\", author: \"Maximillian\", text: \"Learning React is great!\"},\n]\n\nconst AllQuotes = () => {\n    const status = useSelector(state => state.addQuote.status);\n    const dispatch = useDispatch();\n    console.log(status);\n    useEffect(() => {\n        dispatch(getQuote());\n    }, [dispatch])\n\n    return (\n        <QuoteList  quotes={DUMMY_QUOTES} />\n    )\n}\n\nexport default AllQuotes;","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef } from 'react';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n// import { quotesAction } from '../../store/index';\n\nconst QuoteForm = (props) => {\n  \n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n    \n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  return (\n    <Card>\n      <form className={classes.form} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor='author'>Author</label>\n          <input type='text' id='author' ref={authorInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='text'>Text</label>\n          <textarea id='text' rows='5' ref={textInputRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button className='btn'>Add Quote</button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default QuoteForm;\n","import QuoteForm from \"../components/quotes/QuoteForm\";\nimport { addQuote, quotesAction }  from '../store/add-quote';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst NewQuotes = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const status = useSelector(state => state.addQuote.status);\n\n    useEffect(() => {\n        if(status === 'completed') {\n            history.push('/quotes');\n            dispatch(quotesAction.changeStatus(false));\n        }\n    }, [status, history, dispatch]);\n\n    const addQuoteHandler = (quoteInfo) => {\n        dispatch(addQuote(quoteInfo));\n    }\n\n    return (\n\n        <QuoteForm isLoading={status === \"pending\"} onAddQuote={addQuoteHandler} />\n    )\n}\n\nexport default NewQuotes;","const NotFound = () => {\n    return(\n        <div className=\"centered\">\n            <p>Page not found.</p>\n        </div>\n\n    )\n}\n\nexport default NotFound;","import { useRef } from 'react';\n\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    // send comment to server\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useState } from 'react';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  \n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm />}\n      <p>Comments...</p>\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Link } from 'react-router-dom';\nimport { Route, useParams, useRouteMatch } from 'react-router-dom';\nimport Comments from '../components/comments/Comments';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\n\n\nlet DUMMY_QUOTES = [\n    {id: \"q1\", author: \"MAX\", text: \"Learning React is fun!\"},\n    {id: \"q2\", author: \"Maximillian\", text: \"Learning React is great!\"},\n]\n  \nconst QuotesDetail = () => {\n    const params = useParams();\n    const match = useRouteMatch();\n\n\n    let quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\n\n    if(!quote) {\n        return <p>No data found.</p> \n    }\n\n    return (\n        <div>\n            <HighlightedQuote text={quote.text} author={quote.author}/>\n            \n            <Route path={match.url} exact>\n                <div className='centered'>\n                    <Link className='btn--flat' to={`${match.params.quoteId}/comments`} >Load comments</Link>\n                </div>\n            </Route>\n\n            <Route path={`/quotes/${params.quoteId}/comments`} exact>\n            <div className='centered'>\n                    <Link className='btn--flat' to={match.url} >Hide comments</Link>\n                </div>\n            </Route>\n\n            <Route path={`${match.url}/comments`} >\n                <Comments />\n            </Route>\n        </div>\n    )\n}\n\nexport default QuotesDetail;","import { Route, Switch, Redirect } from 'react-router-dom';\nimport Layout from './components/layout/Layout';\nimport AllQuotes from './pages/AllQuotes';\nimport NewQuotes from './pages/NewQuotes';\nimport NotFound from './pages/NotFound';\nimport QuotesDetail from './pages/QuotesDetail';\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path='/' exact>\n          <Redirect to='/quotes' />\n        </Route>\n        <Route path='/quotes' exact >\n          <AllQuotes />\n        </Route>\n        <Route path='/quotes/:quoteId'>\n          <QuotesDetail />\n        </Route>\n        <Route path='/new-quote' >\n          <NewQuotes />\n        </Route>\n        <Route path='*'>\n          <NotFound />\n        </Route>\n      </Switch>\n    </Layout>\n\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom'; \nimport { Provider } from 'react-redux';\nimport store from './store/index';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n"],"sourceRoot":""}